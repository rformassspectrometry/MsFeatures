[{"path":"https://rformassspectrometry.github.io/MsFeatures/articles/MsFeatures.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Grouping Mass Spectrometry Features","text":"Electrospray ionization (ESI) commonly used mass spectrometry (MS)-based metabolomics generate ions compounds enable detection MS instrument. Ionization can generate different ions (adducts) original compound reported separate MS features different mass--charge ratios (m/z). reduce data set complexity (aid subsequent annotation steps) advisable group features supposedly represent signal original compound single entity. MsFeatures package provides key concepts functions feature grouping. Methods implemented base R objects well Bioconductor’s SummarizedExperiment class. See also description general grouping concept package webpage information. Additional grouping methodology expected implemented R packages data objects additional LC-MS related information, XCMSnExp object xcms package. implementation SummarizedExperiment provided package can used reference additional methodology. definition feature groups, QFeatures package used aggregate abundances single signal.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/articles/MsFeatures.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Grouping Mass Spectrometry Features","text":"package can installed BiocManager package. install BiocManager use install.packages(\"BiocManager\") , , BiocManager::install(\"MsFeatures\") install package.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/articles/MsFeatures.html","id":"mass-spectrometry-feature-grouping","dir":"Articles","previous_headings":"","what":"Mass Spectrometry Feature Grouping","title":"Grouping Mass Spectrometry Features","text":"Features originating compound inherit characteristics including retention time (LC GC-MS experiments) abundance/intensity. latter expected features compound pattern feature values/abundances across samples. MsFeatures package defines groupFeatures method perform MS feature grouping based provided input data parameter object selects defines feature grouping algorithm. algorithm supposed assign individual features (single) feature group. Currently two feature grouping approaches implemented: SimilarRtimeParam: group features based similar retention times. AbundanceSimilarityParam: group features based similar feature values/abundances across samples. Additional algorithms, e.g. considering also differences features’ m/z values matching expected ions/adducts isotopes, may implemented future packages. document demonstrate feature grouping functionality simple toy data set used also xcms package raw data provided faahKO data package. data set consists samples 4 mice knock-fatty acid amide hydrolase (FAAH) 4 wild type mice. Pre-processing data set described detail xcms vignette xcms package. load required packages result pre-processing provided SummarizedExperiment within package can loaded data(se). performing feature grouping inspect result object. Feature properties definitions can accessed rowData, feature abundances assay. Columns \"mzmed\" \"rtmed\" object’s rowData provide m/z retention time characterizes feature. total 225 features available present data set, many likely representing signal different ions compound. aim identify based following assumptions LC-MS data: Features (ions) compound similar retention time. abundance features (ions) compound similar pattern across samples, .e. compound highly concentrated one sample low another, ions also follow pattern. detailed general grouping concept, feature grouping implemented MsFeatures default intended used stepwise approach groupFeatures call sub-groups (thus refines) previously defined feature groups. enables either use single algorithm feature grouping build feature grouping pipeline combining different algorithms. example perform first initial grouping features based similar retention time subsequently refine feature groups requiring also similarity feature values across samples. Note also possible perform grouping subset features instead full data set. example provided last section vignette.","code":"library(MsFeatures) library(SummarizedExperiment)  data(\"se\") rowData(se) ## DataFrame with 225 rows and 11 columns ##           mzmed     mzmin     mzmax     rtmed     rtmin     rtmax    npeaks ##       <numeric> <numeric> <numeric> <numeric> <numeric> <numeric> <numeric> ## FT001     200.1     200.1     200.1   2901.63   2880.73   2922.53         2 ## FT002     205.0     205.0     205.0   2789.39   2782.30   2795.36         8 ## FT003     206.0     206.0     206.0   2788.73   2780.73   2792.86         7 ## FT004     207.1     207.1     207.1   2718.12   2713.21   2726.70         7 ## FT005     219.1     219.1     219.1   2518.82   2517.40   2520.81         3 ## ...         ...       ...       ...       ...       ...       ...       ... ## FT221    591.30     591.3     591.3   3005.03   2992.87   3006.05         5 ## FT222    592.15     592.1     592.3   3022.11   2981.91   3107.59         6 ## FT223    594.20     594.2     594.2   3418.16   3359.10   3427.90         3 ## FT224    595.25     595.2     595.3   3010.15   2992.87   3013.77         6 ## FT225    596.20     596.2     596.2   2997.91   2992.87   3002.95         2 ##              KO        WT            peakidx  ms_level ##       <numeric> <numeric>             <list> <integer> ## FT001         2         0  287, 679,1577,...         1 ## FT002         4         4     47,272,542,...         1 ## FT003         3         4     32,259,663,...         1 ## FT004         4         3     19,249,525,...         1 ## FT005         1         2  639, 788,1376,...         1 ## ...         ...       ...                ...       ... ## FT221         2         3    349,684,880,...         1 ## FT222         1         3     86,861,862,...         1 ## FT223         1         2  604, 985,1543,...         1 ## FT224         2         3     67,353,876,...         1 ## FT225         0         2  866,1447,1643,...         1 head(assay(se)) ##        ko15.CDF   ko16.CDF   ko21.CDF  ko22.CDF  wt15.CDF  wt16.CDF  wt21.CDF ## FT001  159738.1  506848.88  113441.08  169955.6  216096.6  145509.7  230477.9 ## FT002 1924712.0 1757150.96 1383416.72 1180288.2 2129885.1 1634342.0 1623589.2 ## FT003  213659.3  289500.67  162897.19  178285.7  253825.6  241844.4  240606.0 ## FT004  349011.5  451863.66  343897.76  208002.8  364609.8  360908.9  223322.5 ## FT005  135978.5   25524.79   71530.84  107348.5  223951.8  134398.9  190203.8 ## FT006  286221.4  289908.23  164008.97  149097.6  255697.7  311296.8  366441.5 ##         wt22.CDF ## FT001  140551.30 ## FT002 1354004.93 ## FT003  185399.47 ## FT004  221937.53 ## FT005   84772.92 ## FT006  271128.02"},{"path":"https://rformassspectrometry.github.io/MsFeatures/articles/MsFeatures.html","id":"grouping-of-features-by-similar-retention-time","dir":"Articles","previous_headings":"Mass Spectrometry Feature Grouping","what":"Grouping of features by similar retention time","title":"Grouping Mass Spectrometry Features","text":"intuitive simple way group LC-MS features based retention times: ionization compounds happens LC thus ions compound retention time. plot shows retention times (m/z) features present data set. Plot retention times m/z features data set. can see several features similar retention time, especially lower retention times. using groupFeatures SimilarRtimeParam can next group features difference retention time certain threshold. approach however group features representing ions compound together, also features different, co-eluting compounds (.e. different compounds retention time). Thus feature groups defined algorithm refined based another feature property reduce false positives. present example, group features maximal difference retention time 10 seconds feature group. also specify column object’s rowData contains retention times features. groupFeatures call SummarizedExperiment added results grouping new column called \"feature_group\" object’s rowData. column can also directly accessed featureGroups function. print number features feature grouped defined SimilarRtimeParam approach. also calculate mean retention time feature groups order increasingly. Note differences retention times feature groups can smaller used cut-(10 seconds case). happy feature grouping like repeat need drop \"feature_group\" column object’s rowData rowData(se)$feature_group <- NULL repeat feature grouping different settings. required, default groupFeatures refine previous feature grouping results overwrite . stated , initial grouping retention times put features , also different co-eluting compounds feature group. thus next refine feature groups requiring also feature abundances across samples correlated.","code":"plot(rowData(se)$rtmed, rowData(se)$mzmed,      xlab = \"retention time\", ylab = \"m/z\", main = \"features\",      col = \"#00000060\") grid() se <- groupFeatures(se, param = SimilarRtimeParam(10), rtime = \"rtmed\") table(featureGroups(se)) ##  ## FG.001 FG.002 FG.003 FG.004 FG.005 FG.006 FG.007 FG.008 FG.009 FG.010 FG.011  ##      3      3      3      3      2      4      5      6      4      2      5  ## FG.012 FG.013 FG.014 FG.015 FG.016 FG.017 FG.018 FG.019 FG.020 FG.021 FG.022  ##      3      4      3      5      3      3      5      3      3      3      3  ## FG.023 FG.024 FG.025 FG.026 FG.027 FG.028 FG.029 FG.030 FG.031 FG.032 FG.033  ##      3      3      6      3      3      3      3      2      3      3      4  ## FG.034 FG.035 FG.036 FG.037 FG.038 FG.039 FG.040 FG.041 FG.042 FG.043 FG.044  ##      3      2      2      3      2      2      4      2      2      2      3  ## FG.045 FG.046 FG.047 FG.048 FG.049 FG.050 FG.051 FG.052 FG.053 FG.054 FG.055  ##      4      2      3      3      3      2      2      3      4      2      3  ## FG.056 FG.057 FG.058 FG.059 FG.060 FG.061 FG.062 FG.063 FG.064 FG.065 FG.066  ##      2      2      2      3      2      3      2      2      2      3      2  ## FG.067 FG.068 FG.069 FG.070 FG.071 FG.072 FG.073 FG.074 FG.075 FG.076 FG.077  ##      2      3      2      2      2      3      2      2      1      1      1  ## FG.078 FG.079 FG.080 FG.081 FG.082 FG.083 FG.084  ##      1      1      1      1      1      1      1 split(rowData(se)$rtmed, featureGroups(se)) |> vapply(FUN = mean, numeric(1)) |> sort() ##   FG.005   FG.012   FG.062   FG.076   FG.069   FG.007   FG.018   FG.027  ## 2506.301 2511.821 2519.745 2595.503 2623.786 2684.671 2686.835 2688.495  ##   FG.064   FG.057   FG.066   FG.074   FG.003   FG.023   FG.004   FG.001  ## 2694.089 2718.799 2731.648 2751.041 2787.291 2788.022 2788.625 2788.949  ##   FG.011   FG.048   FG.014   FG.075   FG.084   FG.080   FG.060   FG.021  ## 2790.232 2793.065 2799.149 2832.560 2860.496 2871.735 2881.899 2899.457  ##   FG.063   FG.033   FG.071   FG.079   FG.050   FG.051   FG.039   FG.010  ## 2915.107 2924.922 2936.602 2953.627 2998.303 3005.543 3009.864 3011.159  ##   FG.040   FG.019   FG.006   FG.067   FG.036   FG.078   FG.037   FG.013  ## 3015.635 3022.568 3027.254 3038.254 3044.682 3057.242 3075.361 3079.912  ##   FG.017   FG.083   FG.044   FG.073   FG.070   FG.008   FG.068   FG.082  ## 3088.353 3114.721 3128.047 3142.710 3161.133 3170.219 3184.355 3203.298  ##   FG.029   FG.009   FG.055   FG.002   FG.042   FG.016   FG.035   FG.054  ## 3217.009 3226.662 3242.698 3258.465 3261.208 3263.141 3265.660 3284.004  ##   FG.043   FG.038   FG.052   FG.077   FG.056   FG.028   FG.061   FG.022  ## 3289.081 3295.654 3300.775 3311.799 3321.354 3324.717 3335.200 3353.939  ##   FG.031   FG.081   FG.041   FG.026   FG.015   FG.030   FG.047   FG.034  ## 3358.597 3372.908 3383.014 3395.552 3405.585 3407.192 3410.212 3417.383  ##   FG.024   FG.049   FG.059   FG.058   FG.045   FG.046   FG.065   FG.053  ## 3422.675 3428.323 3435.389 3442.423 3447.411 3457.582 3465.580 3472.813  ##   FG.032   FG.020   FG.025   FG.072  ## 3478.609 3483.910 3497.730 3510.664"},{"path":"https://rformassspectrometry.github.io/MsFeatures/articles/MsFeatures.html","id":"grouping-of-features-by-abundance-correlation-across-samples","dir":"Articles","previous_headings":"Mass Spectrometry Feature Grouping","what":"Grouping of features by abundance correlation across samples","title":"Grouping Mass Spectrometry Features","text":"Features representing ions compound expected correlated feature values (intensities, abundances) across samples. groupFeatures AbundanceSimilarityParam allows group features similar abundance patterns. approach performs pairwise similarity calculation puts features similarity >= threshold feature group. calling function previous result object initial feature groups refined, eventually splitting based (missing) correlation feature abundances. evaluate correlation individual features indicating also previously defined feature groups. Correlation features based abundances. expected, clustering based feature abundances perfectly match retention time-based feature grouping. Many features grouped based retention time low, even negative correlation feature abundances across samples hence likely representing features different, co-eluting compounds. hand, many features highly correlated, different retention time can thus also represent signal ions compound. Thus, single approach drawbacks, combination can reduce number wrongly grouped features. thus next perform feature grouping AbundanceSimilarityParam result object refine retention time-based feature groups. approach can customized providing function calculate feature similarities parameter simFun (default cor used calculate similarities using Pearson’s correlation). Parameter transform allows specify function transform feature abundances prior similarity calculation. default feature values taken -, use transform = log2 perform calculations log2 scale. threshold = 0.7 ensure features correlation coefficient >= 0.7 assigned feature group. Finally, parameter allow specify assay SummarizedExperiment contains feature abundances similarities calculated. See AbundanceSimilarityParam help page full listing parameters details. Many larger retention time-based feature groups splitted two sub-groups based correlation feature abundances. evaluate one specific feature group \"FG.003\" plotting pairwise correlation. Pairwise correlation plot features initially grouped feature group FG.003. high correlation can observed FT035 FT051 correlated feature FT013. next evaluate feature grouping another example. Pairwise correlation plot features initially grouped feature group FG.008. results less clear previous example, still, features seem correlated others . Generally, abundance correlation approach data set suffers low number sample (8 total). Also, approach works better features high variance (biologically technically) across samples. table lists retention time, m/z group assignment features. difference m/z features FT163 FT165, assigned feature group, ~ 1 suggesting one two fact (C13) isotope feature.","code":"library(pheatmap) fvals <- log2(assay(se))  cormat <- cor(t(fvals), use = \"pairwise.complete.obs\") ann <- data.frame(fgroup = featureGroups(se)) rownames(ann) <- rownames(cormat)  res <- pheatmap(cormat, annotation_row = ann, cluster_rows = TRUE,                 cluster_cols = TRUE) se <- groupFeatures(se, AbundanceSimilarityParam(threshold = 0.7,                                                  transform = log2), i = 1) table(featureGroups(se)) ##  ## FG.001.001 FG.001.002 FG.002.001 FG.002.002 FG.002.003 FG.003.001 FG.003.002  ##          2          1          1          1          1          2          1  ## FG.004.001 FG.005.001 FG.006.001 FG.006.002 FG.007.001 FG.007.002 FG.007.003  ##          3          2          3          1          2          1          1  ## FG.007.004 FG.008.001 FG.008.002 FG.008.003 FG.008.004 FG.009.001 FG.009.002  ##          1          3          1          1          1          3          1  ## FG.010.001 FG.011.001 FG.011.002 FG.011.003 FG.012.001 FG.013.001 FG.013.002  ##          2          2          2          1          3          2          1  ## FG.013.003 FG.014.001 FG.014.002 FG.015.001 FG.015.002 FG.015.003 FG.015.004  ##          1          2          1          2          1          1          1  ## FG.016.001 FG.016.002 FG.017.001 FG.017.002 FG.018.001 FG.018.002 FG.018.003  ##          2          1          2          1          2          1          1  ## FG.018.004 FG.019.001 FG.019.002 FG.019.003 FG.020.001 FG.020.002 FG.021.001  ##          1          1          1          1          2          1          1  ## FG.021.002 FG.021.003 FG.022.001 FG.022.002 FG.022.003 FG.023.001 FG.023.002  ##          1          1          1          1          1          2          1  ## FG.024.001 FG.024.002 FG.024.003 FG.025.001 FG.025.002 FG.025.003 FG.025.004  ##          1          1          1          2          1          1          1  ## FG.025.005 FG.026.001 FG.026.002 FG.026.003 FG.027.001 FG.027.002 FG.027.003  ##          1          1          1          1          1          1          1  ## FG.028.001 FG.028.002 FG.029.001 FG.029.002 FG.030.001 FG.030.002 FG.031.001  ##          2          1          2          1          1          1          3  ## FG.032.001 FG.032.002 FG.032.003 FG.033.001 FG.033.002 FG.033.003 FG.033.004  ##          1          1          1          1          1          1          1  ## FG.034.001 FG.034.002 FG.034.003 FG.035.001 FG.035.002 FG.036.001 FG.036.002  ##          1          1          1          1          1          1          1  ## FG.037.001 FG.037.002 FG.038.001 FG.039.001 FG.040.001 FG.040.002 FG.041.001  ##          2          1          2          2          2          2          1  ## FG.041.002 FG.042.001 FG.042.002 FG.043.001 FG.044.001 FG.044.002 FG.045.001  ##          1          1          1          2          2          1          1  ## FG.045.002 FG.045.003 FG.045.004 FG.046.001 FG.047.001 FG.047.002 FG.047.003  ##          1          1          1          2          1          1          1  ## FG.048.001 FG.048.002 FG.048.003 FG.049.001 FG.049.002 FG.050.001 FG.050.002  ##          1          1          1          2          1          1          1  ## FG.051.001 FG.052.001 FG.052.002 FG.053.001 FG.053.002 FG.053.003 FG.054.001  ##          2          2          1          2          1          1          1  ## FG.054.002 FG.055.001 FG.055.002 FG.055.003 FG.056.001 FG.056.002 FG.057.001  ##          1          1          1          1          1          1          2  ## FG.058.001 FG.058.002 FG.059.001 FG.059.002 FG.059.003 FG.060.001 FG.060.002  ##          1          1          1          1          1          1          1  ## FG.061.001 FG.061.002 FG.062.001 FG.062.002 FG.063.001 FG.064.001 FG.064.002  ##          2          1          1          1          2          1          1  ## FG.065.001 FG.065.002 FG.066.001 FG.066.002 FG.067.001 FG.067.002 FG.068.001  ##          2          1          1          1          1          1          3  ## FG.069.001 FG.070.001 FG.070.002 FG.071.001 FG.071.002 FG.072.001 FG.072.002  ##          2          1          1          1          1          2          1  ## FG.073.001 FG.073.002 FG.074.001 FG.075.001 FG.076.001 FG.077.001 FG.078.001  ##          1          1          2          1          1          1          1  ## FG.079.001 FG.080.001 FG.081.001 FG.082.001 FG.083.001 FG.084.001  ##          1          1          1          1          1          1 fts <- grep(\"FG.003\", featureGroups(se)) pairs(t(fvals[fts, ]), gap = 0.1, main = \"FG.003\") fts <- grep(\"FG.008\", featureGroups(se)) pairs(t(fvals[fts, ]), gap = 0.1, main = \"FG.008\") tmp <- as.data.frame(rowData(se)[fts, c(\"rtmed\", \"mzmed\", \"feature_group\")]) tmp <- tmp[order(tmp$feature_group), ] knitr::kable(tmp)"},{"path":"https://rformassspectrometry.github.io/MsFeatures/articles/MsFeatures.html","id":"performing-feature-grouping-on-a-subset-of-features","dir":"Articles","previous_headings":"Mass Spectrometry Feature Grouping","what":"Performing feature grouping on a subset of features","title":"Grouping Mass Spectrometry Features","text":"Sometimes might needed required perform feature grouping full data set subset interesting features (.e. significant differences feature abundances sample groups). also advantage larger range feature values across samples supports abundance similarity-based feature grouping. Feature grouping subset features can performed manually assigning features interest initial feature group setting feature group features NA. example perform feature grouping features 30-60. refine initial, manually specified feature group retention time-based grouping. Features NA value feature group column skipped. result get following grouping:","code":"featureGroups(se) <- NA_character_ featureGroups(se)[30:60] <- \"FG\"  se <- groupFeatures(se, SimilarRtimeParam(10), rtime = \"rtmed\") featureGroups(se},{"path":"https://rformassspectrometry.github.io/MsFeatures/articles/MsFeatures.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Grouping Mass Spectrometry Features","text":"","code":"## R version 4.3.0 beta (2023-04-06 r84184) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 22.04.2 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    ##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] pheatmap_1.0.12             SummarizedExperiment_1.29.1 ##  [3] Biobase_2.59.0              GenomicRanges_1.51.4        ##  [5] GenomeInfoDb_1.35.16        IRanges_2.33.1              ##  [7] S4Vectors_0.37.5            BiocGenerics_0.45.3         ##  [9] MatrixGenerics_1.11.1       matrixStats_0.63.0          ## [11] MsFeatures_1.7.0            BiocStyle_2.27.1            ##  ## loaded via a namespace (and not attached): ##  [1] sass_0.4.5              MsCoreUtils_1.11.6      bitops_1.0-7            ##  [4] lattice_0.21-8          stringi_1.7.12          digest_0.6.31           ##  [7] magrittr_2.0.3          RColorBrewer_1.1-3      grid_4.3.0              ## [10] evaluate_0.20           bookdown_0.33           fastmap_1.1.1           ## [13] rprojroot_2.0.3         jsonlite_1.8.4          Matrix_1.5-4            ## [16] ProtGenerics_1.31.0     BiocManager_1.30.20     purrr_1.0.1             ## [19] scales_1.2.1            textshaping_0.3.6       jquerylib_0.1.4         ## [22] cli_3.6.1               rlang_1.1.0             XVector_0.39.0          ## [25] munsell_0.5.0           cachem_1.0.7            DelayedArray_0.25.0     ## [28] yaml_2.3.7              tools_4.3.0             memoise_2.0.1           ## [31] colorspace_2.1-0        GenomeInfoDbData_1.2.10 vctrs_0.6.1             ## [34] R6_2.5.1                lifecycle_1.0.3         zlibbioc_1.45.0         ## [37] stringr_1.5.0           fs_1.6.1                clue_0.3-64             ## [40] MASS_7.3-58.4           ragg_1.2.5              cluster_2.1.4           ## [43] desc_1.4.2              gtable_0.3.3            pkgdown_2.0.7.9000      ## [46] bslib_0.4.2             glue_1.6.2              systemfonts_1.0.4       ## [49] highr_0.10              xfun_0.38               knitr_1.42              ## [52] farver_2.1.1            htmltools_0.5.5         rmarkdown_2.21          ## [55] compiler_4.3.0          RCurl_1.98-1.12"},{"path":"https://rformassspectrometry.github.io/MsFeatures/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Johannes Rainer. Author, maintainer.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rainer J (2023). MsFeatures: Functionality Mass Spectrometry Features. R package version 1.7.0, https://github.com/RforMassSpectrometry/MsFeatures.","code":"@Manual{,   title = {MsFeatures: Functionality for Mass Spectrometry Features},   author = {Johannes Rainer},   year = {2023},   note = {R package version 1.7.0},   url = {https://github.com/RforMassSpectrometry/MsFeatures}, }"},{"path":"https://rformassspectrometry.github.io/MsFeatures/index.html","id":"msfeatures---functionality-for-mass-spectrometry-features","dir":"","previous_headings":"","what":"Functionality for Mass Spectrometry Features","title":"Functionality for Mass Spectrometry Features","text":"MsFeatures package defines functionality Mass Spectrometry (MS) features. features characterized specific mass--charge ration m/z eventually retention time rt (LC-MS features). package defines thus basic concepts functions MS features includes grouping (LC-MS) features based properties, retention time (coeluting compounds), correlation signals across samples. Provided functions base data types core MS data representations (Chromatogram objects MSnbase package). Implementation feature grouping methods specific data objects, LC-MS preprocessing results stored XCMSnExp objects xcms package implemented respective packages. See package homepage information.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functionality for Mass Spectrometry Features","text":"package can installed ","code":"install.packages(\"BiocManager\") BiocManager::install(\"MsFeatures\")"},{"path":"https://rformassspectrometry.github.io/MsFeatures/index.html","id":"contributions","dir":"","previous_headings":"","what":"Contributions","title":"Functionality for Mass Spectrometry Features","text":"Contributions highly welcome follow contribution guidelines. Also, please check coding style guidelines RforMassSpectrometry vignette.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/corRows.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlate rows of a numeric matrix — corRows","title":"Correlate rows of a numeric matrix — corRows","text":"corRows simple function perform pairwise correlation rows numeric matrix calling stats::cor() transposed input matrix x.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/corRows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlate rows of a numeric matrix — corRows","text":"","code":"corRows(   x,   y = NULL,   use = \"pairwise.complete.obs\",   method = c(\"pearson\", \"kendall\", \"spearman\"),   ... )"},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/corRows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlate rows of a numeric matrix — corRows","text":"x numeric matrix. y supported (ignored). use see information parameter use stats::cor(). Defaults use = \"pairwise.complete.obs\". method see information parameter method stats::cor(). ... additional parameters (ignored).","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/corRows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlate rows of a numeric matrix — corRows","text":"matrix correlation coefficients rows x.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/corRows.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Correlate rows of a numeric matrix — corRows","text":"Johannes Rainer","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/corRows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlate rows of a numeric matrix — corRows","text":"","code":"## Define a simple numeric matrix x <- rbind(     c(12, 34, 231, 234, 9, 5, 7),     c(900, 900, 800, 10, 12, 9, 4),     c(25, 70, 400, 409, 15, 8, 4),     c(12, 13, 14, 15, 16, 17, 18),     c(14, 36, 240, 239, 12, 7, 8)     )  corRows(x) #>             [,1]        [,2]       [,3]       [,4]       [,5] #> [1,]  1.00000000  0.09610556  0.9995093 -0.2120207  0.9999276 #> [2,]  0.09610556  1.00000000  0.1152920 -0.8822763  0.1001638 #> [3,]  0.99950928  0.11529202  1.0000000 -0.2362897  0.9993837 #> [4,] -0.21202072 -0.88227627 -0.2362897  1.0000000 -0.2136497 #> [5,]  0.99992759  0.10016376  0.9993837 -0.2136497  1.0000000  corRows(x, method = \"spearman\") #>            [,1]       [,2]       [,3]       [,4]       [,5] #> [1,]  1.0000000  0.4865062  0.9642857 -0.6071429  0.9642857 #> [2,]  0.4865062  1.0000000  0.5225437 -0.9549937  0.5585812 #> [3,]  0.9642857  0.5225437  1.0000000 -0.6428571  0.9285714 #> [4,] -0.6071429 -0.9549937 -0.6428571  1.0000000 -0.6428571 #> [5,]  0.9642857  0.5585812  0.9285714 -0.6428571  1.0000000"},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/featureGroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or set feature group definitions from an object — featureGroups","title":"Get or set feature group definitions from an object — featureGroups","text":"featureGroups featureGroups<- allow extract set feature definitions input object. implementations SummarizedExperiment() get set content column named \"feature_group\" object's rowData. method implemented object groupFeatures() method defined.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/featureGroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or set feature group definitions from an object — featureGroups","text":"","code":"featureGroups(object, ...)  featureGroups(object) <- value  # S4 method for SummarizedExperiment featureGroups(object)  # S4 method for SummarizedExperiment featureGroups(object) <- value"},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/featureGroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or set feature group definitions from an object — featureGroups","text":"object input object. MsFeatures package method implemented SummarizedExperiment. ... ignored. value new value feature groups variable.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/featureGroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or set feature group definitions from an object — featureGroups","text":"character group assignment features. length features object.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/featureGroups.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get or set feature group definitions from an object — featureGroups","text":"Johannes Rainer","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/featureGroups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get or set feature group definitions from an object — featureGroups","text":"","code":"## Load the test SummarizedExperiment library(SummarizedExperiment) #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:MatrixGenerics’: #>  #>     rowMedians #> The following objects are masked from ‘package:matrixStats’: #>  #>     anyMissing, rowMedians data(se)  ## No column \"feature_group\" present in the object, this NA is returned featureGroups(se) #>   [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [26] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [51] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [76] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [101] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [126] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [151] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [176] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA  ## Add a column \"feature_group\" to the `rowData` of the object rowData(se)$feature_group <- seq_len(nrow(rowData(se)))  featureGroups(se) #>   [1] \"1\"   \"2\"   \"3\"   \"4\"   \"5\"   \"6\"   \"7\"   \"8\"   \"9\"   \"10\"  \"11\"  \"12\"  #>  [13] \"13\"  \"14\"  \"15\"  \"16\"  \"17\"  \"18\"  \"19\"  \"20\"  \"21\"  \"22\"  \"23\"  \"24\"  #>  [25] \"25\"  \"26\"  \"27\"  \"28\"  \"29\"  \"30\"  \"31\"  \"32\"  \"33\"  \"34\"  \"35\"  \"36\"  #>  [37] \"37\"  \"38\"  \"39\"  \"40\"  \"41\"  \"42\"  \"43\"  \"44\"  \"45\"  \"46\"  \"47\"  \"48\"  #>  [49] \"49\"  \"50\"  \"51\"  \"52\"  \"53\"  \"54\"  \"55\"  \"56\"  \"57\"  \"58\"  \"59\"  \"60\"  #>  [61] \"61\"  \"62\"  \"63\"  \"64\"  \"65\"  \"66\"  \"67\"  \"68\"  \"69\"  \"70\"  \"71\"  \"72\"  #>  [73] \"73\"  \"74\"  \"75\"  \"76\"  \"77\"  \"78\"  \"79\"  \"80\"  \"81\"  \"82\"  \"83\"  \"84\"  #>  [85] \"85\"  \"86\"  \"87\"  \"88\"  \"89\"  \"90\"  \"91\"  \"92\"  \"93\"  \"94\"  \"95\"  \"96\"  #>  [97] \"97\"  \"98\"  \"99\"  \"100\" \"101\" \"102\" \"103\" \"104\" \"105\" \"106\" \"107\" \"108\" #> [109] \"109\" \"110\" \"111\" \"112\" \"113\" \"114\" \"115\" \"116\" \"117\" \"118\" \"119\" \"120\" #> [121] \"121\" \"122\" \"123\" \"124\" \"125\" \"126\" \"127\" \"128\" \"129\" \"130\" \"131\" \"132\" #> [133] \"133\" \"134\" \"135\" \"136\" \"137\" \"138\" \"139\" \"140\" \"141\" \"142\" \"143\" \"144\" #> [145] \"145\" \"146\" \"147\" \"148\" \"149\" \"150\" \"151\" \"152\" \"153\" \"154\" \"155\" \"156\" #> [157] \"157\" \"158\" \"159\" \"160\" \"161\" \"162\" \"163\" \"164\" \"165\" \"166\" \"167\" \"168\" #> [169] \"169\" \"170\" \"171\" \"172\" \"173\" \"174\" \"175\" \"176\" \"177\" \"178\" \"179\" \"180\" #> [181] \"181\" \"182\" \"183\" \"184\" \"185\" \"186\" \"187\" \"188\" \"189\" \"190\" \"191\" \"192\" #> [193] \"193\" \"194\" \"195\" \"196\" \"197\" \"198\" \"199\" \"200\" \"201\" \"202\" \"203\" \"204\" #> [205] \"205\" \"206\" \"207\" \"208\" \"209\" \"210\" \"211\" \"212\" \"213\" \"214\" \"215\" \"216\" #> [217] \"217\" \"218\" \"219\" \"220\" \"221\" \"222\" \"223\" \"224\" \"225\""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupClosest.html","id":null,"dir":"Reference","previous_headings":"","what":"Group values with differences below threshold — groupClosest","title":"Group values with differences below threshold — groupClosest","text":"Group values difference smaller user defined threshold. function uses groupSimilarityMatrix() function create groups smallest differences members. Differences members one group user defined threshold maxDiff. stringent grouping groupConsecutive() performs leading thus smaller groups (smaller differences members).","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupClosest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group values with differences below threshold — groupClosest","text":"","code":"groupClosest(x, maxDiff = 1)"},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupClosest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group values with differences below threshold — groupClosest","text":"x numeric values grouped. maxDiff numeric(1) defining threshold difference values x grouped group.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupClosest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group values with differences below threshold — groupClosest","text":"integer group assignment (values grouped together return value).","code":""},{"path":[]},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupClosest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Group values with differences below threshold — groupClosest","text":"Johannes Rainer","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupClosest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group values with differences below threshold — groupClosest","text":"","code":"x <- c(1.1, 1.9, 2.2) groupClosest(x) #> [1] 2 1 1 ## Although the difference between the 1st and 2nd element would be smaller ## than the threshold, they are not grouped because the difference between ## the 2nd and 3rd element is even smaller. The first element is also not ## put into the same group, because it has a difference > diffRt to the 3rd ## element.  x <- c(1.1, 1.5, 1.7, 2.3, 2.7, 4.3, 4.4, 4.9, 5.2, 5.4, 5.8, 6, 7,     9, 9.5, 15)  groupClosest(x) #>  [1] 2 2 2 5 5 1 1 3 3 3 4 4 7 6 6 8"},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupConsecutive.html","id":null,"dir":"Reference","previous_headings":"","what":"Grouping of sorted values into sets with smallest differences — groupConsecutive","title":"Grouping of sorted values into sets with smallest differences — groupConsecutive","text":"groupConsecutive groups sorted values x difference smaller maxDiff. result, mean difference groups always larger maxDiff, difference individual values within group (e.g. first last) can larger maxDiff. detail, sorted x, function starts smallest value defining first group one containing values x difference first value <= maxDiff. next group defined based next larger value part first group includes values difference <= maxDiff value. values fulfilling criteria already part previous group, differences mean value current group mean previous groups compared values assigned group smallest difference. Example: values 1.1, 1.9, 2.2 grouped maxDiff = 1. first group defined include values difference first value (1.1) smaller maxDiff. Thus, first group defined contain values 1.1 1.9. next group defined based next larger value part group, 2.2. group contains values 1.9 2.2 value 1.9 already assigned first group. difference value 1.9 mean current group (mean(c(1.9, 2.2)) compared difference 1.9 mean value group 1.9 already part (mean(c(1.1, 1.9))). Since difference second group smaller, 1.9 removed first group assigned second one.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupConsecutive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grouping of sorted values into sets with smallest differences — groupConsecutive","text":"","code":"groupConsecutive(x, maxDiff = 1)"},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupConsecutive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grouping of sorted values into sets with smallest differences — groupConsecutive","text":"x numeric values grouped. maxDiff numeric(1) defining threshold difference values x grouped group.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupConsecutive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grouping of sorted values into sets with smallest differences — groupConsecutive","text":"integer group assignment (values grouped together return value).","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupConsecutive.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Grouping of sorted values into sets with smallest differences — groupConsecutive","text":"difference consecutive (ordered) values within defined group always <= maxDiff, difference e.g. first last (ordered) values can larger maxDiff. See groupClosest() stringent grouping function.","code":""},{"path":[]},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupConsecutive.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Grouping of sorted values into sets with smallest differences — groupConsecutive","text":"Johannes Rainer","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupConsecutive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grouping of sorted values into sets with smallest differences — groupConsecutive","text":"","code":"## The example described above x <- c(1.1, 1.9, 2.2) groupConsecutive(x) #> [1] 1 2 2  x <- c(1.1, 1.5, 1.7, 2.3, 2.7, 4.3, 4.4, 4.9, 5.2, 5.4, 5.8, 6, 7,     9, 9.5, 15)  groupConsecutive(x) #>  [1] 1 1 1 2 2 3 3 3 4 4 4 4 5 6 6 7 ## value 5.2 was initially grouped with 4.3 (because their difference is ## smaller 1, but then re-grouped together with 5.4 because the difference ## between 5.4 (the next value outside the group of 4.3) and 5.2 is smaller ## than its difference to the mean value of the group for value 4.3  ## Example for a case in which values are NOT grouped into the same group ## even if the difference between them is <= maxDiff a <- c(4.9, 5.2, 5.4) groupConsecutive(a, maxDiff = 0.3) #> [1] 1 2 2"},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures-similar-abundance.html","id":null,"dir":"Reference","previous_headings":"","what":"Group features based on abundance similarities across samples — groupFeatures-similar-abundance","title":"Group features based on abundance similarities across samples — groupFeatures-similar-abundance","text":"Group features based similar abundances (.e. feature values) across samples. Parameter subset allows define sub set samples similarity calculation performed. might example better exclude QC samples analysis feature values  supposed constant samples. function first calculates nxn similarity matrix n number features subsequently groups features similarity higher user provided threshold. Parameter simFun allows specify function calculate pairwise similarities feature values (eventually transformed function specified parameter transform). simFun defaults function uses cor calculate similarities rows object function calculates similarities rows returns (symmetric) numeric similarity matrix can used. object SummarizedExperiment(): column \"feature_group\" found SummarizedExperiment::colData() feature groups defined column sub-grouped method. See groupFeatures() general concept feature grouping. Parameter groupFun allows specify function group features based similarity function. defaults groupSimilarityMatrix. See groupSimilarityMatrix() details. Additional settings groupFun simFun functions can passed parameter object  ... AbundanceSimilarityParam constructor function. additional parameters specific type object can passed via ... groupFeatures call.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures-similar-abundance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group features based on abundance similarities across samples — groupFeatures-similar-abundance","text":"","code":"AbundanceSimilarityParam(   threshold = 0.9,   simFun = corRows,   groupFun = groupSimilarityMatrix,   subset = integer(),   transform = identity,   ... )  # S4 method for matrix,AbundanceSimilarityParam groupFeatures(object, param, ...)  # S4 method for SummarizedExperiment,AbundanceSimilarityParam groupFeatures(object, param, i = 1L, ...)"},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures-similar-abundance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group features based on abundance similarities across samples — groupFeatures-similar-abundance","text":"threshold numeric(1) defining (similarity) threshold used feature grouping. parameter passed groupFun function. simFun function used calculate (pairwise) similarities (rows). Defaults simFun = corRows. See description corRows() details. groupFun function group features based calculated similarity matrix. Defaults groupFun = groupSimilarityMatrix. See groupSimilarityMatrix() details. subset integer logical defining subset samples (least 2) similarity calculation performed. default calculation performed samples. transform function used transform feature abundances prior similarity calculation. Defaults transform = identity. Alternatively, values e.g. transformed log2 scale transform = log2. ... AbundanceSimilarityParam: optional parameters passed along simFun groupFun. groupFeatures: optional parameters extraction/definition feature values object. object object containing feature abundances features grouped. param AbundanceSimilarityParam defining settings grouping based feature values. object SummarizedExperiment(): integer(1) character(1) specifying either index name  assay object contains feature values used. Use assayNames() object list available assays.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures-similar-abundance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group features based on abundance similarities across samples — groupFeatures-similar-abundance","text":"object SummarizedExperiment: SummarizedExperiment grouping results added column \"feature_group\" object's rowData. object matrix: integer length equal number rows group identifiers.","code":""},{"path":[]},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures-similar-abundance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Group features based on abundance similarities across samples — groupFeatures-similar-abundance","text":"Johannes Rainer","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures-similar-abundance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group features based on abundance similarities across samples — groupFeatures-similar-abundance","text":"","code":"## Define a simple numeric matrix on which we want to group the rows x <- rbind(     c(12, 34, 231, 234, 9, 5, 7),     c(900, 900, 800, 10, 12, 9, 4),     c(25, 70, 400, 409, 15, 8, 4),     c(12, 13, 14, 15, 16, 17, 18),     c(14, 36, 240, 239, 12, 7, 8),     c(100, 103, 80, 2, 3, 1, 1)     )  ## Group rows based on similarity calculated with Pearson's correlation ## on the actual data values (without transforming them). res <- groupFeatures(x, AbundanceSimilarityParam()) res #> [1] 1 2 1 3 1 2  ## Use Spearman's rho to correlate rows of the log2 transformed x matrix res <- groupFeatures(x, AbundanceSimilarityParam(method = \"spearman\",     transform = log2)) res #> [1] 2 1 2 3 2 1  ## Perform the grouping on a SummarizedExperiment library(SummarizedExperiment) data(se)  ## Group features based on log2 transformed feature values in the first ## assay of the SummarizedExperiment res <- groupFeatures(se, param = AbundanceSimilarityParam(threshold = 0.7,     transform = log2))  featureGroups(res) #>   [1] \"FG.001\" \"FG.017\" \"FG.001\" \"FG.002\" \"FG.041\" \"FG.003\" \"FG.037\" \"FG.021\" #>   [9] \"FG.021\" \"FG.021\" \"FG.028\" \"FG.045\" \"FG.017\" \"FG.002\" \"FG.014\" \"FG.026\" #>  [17] \"FG.048\" \"FG.027\" \"FG.008\" \"FG.007\" \"FG.008\" \"FG.017\" \"FG.002\" \"FG.033\" #>  [25] \"FG.011\" \"FG.016\" \"FG.015\" \"FG.002\" \"FG.027\" \"FG.049\" \"FG.010\" \"FG.019\" #>  [33] \"FG.006\" \"FG.010\" \"FG.006\" \"FG.018\" \"FG.004\" \"FG.004\" \"FG.026\" \"FG.013\" #>  [41] \"FG.020\" \"FG.008\" \"FG.018\" \"FG.013\" \"FG.008\" \"FG.011\" \"FG.011\" \"FG.022\" #>  [49] \"FG.047\" \"FG.004\" \"FG.006\" \"FG.003\" \"FG.004\" \"FG.004\" \"FG.043\" \"FG.016\" #>  [57] \"FG.032\" \"FG.001\" \"FG.038\" \"FG.025\" \"FG.003\" \"FG.045\" \"FG.026\" \"FG.003\" #>  [65] \"FG.050\" \"FG.041\" \"FG.015\" \"FG.022\" \"FG.008\" \"FG.002\" \"FG.011\" \"FG.013\" #>  [73] \"FG.015\" \"FG.051\" \"FG.014\" \"FG.001\" \"FG.052\" \"FG.031\" \"FG.044\" \"FG.017\" #>  [81] \"FG.047\" \"FG.019\" \"FG.017\" \"FG.025\" \"FG.046\" \"FG.035\" \"FG.053\" \"FG.012\" #>  [89] \"FG.012\" \"FG.008\" \"FG.054\" \"FG.034\" \"FG.009\" \"FG.028\" \"FG.030\" \"FG.030\" #>  [97] \"FG.002\" \"FG.010\" \"FG.031\" \"FG.028\" \"FG.039\" \"FG.024\" \"FG.055\" \"FG.044\" #> [105] \"FG.004\" \"FG.006\" \"FG.016\" \"FG.029\" \"FG.044\" \"FG.035\" \"FG.006\" \"FG.020\" #> [113] \"FG.024\" \"FG.008\" \"FG.027\" \"FG.004\" \"FG.005\" \"FG.004\" \"FG.014\" \"FG.010\" #> [121] \"FG.004\" \"FG.004\" \"FG.010\" \"FG.014\" \"FG.042\" \"FG.039\" \"FG.056\" \"FG.029\" #> [129] \"FG.036\" \"FG.008\" \"FG.004\" \"FG.005\" \"FG.022\" \"FG.010\" \"FG.003\" \"FG.020\" #> [137] \"FG.020\" \"FG.004\" \"FG.003\" \"FG.042\" \"FG.010\" \"FG.023\" \"FG.025\" \"FG.006\" #> [145] \"FG.057\" \"FG.010\" \"FG.022\" \"FG.014\" \"FG.058\" \"FG.023\" \"FG.020\" \"FG.046\" #> [153] \"FG.037\" \"FG.021\" \"FG.008\" \"FG.010\" \"FG.023\" \"FG.013\" \"FG.013\" \"FG.024\" #> [161] \"FG.032\" \"FG.010\" \"FG.005\" \"FG.020\" \"FG.010\" \"FG.020\" \"FG.022\" \"FG.013\" #> [169] \"FG.010\" \"FG.010\" \"FG.020\" \"FG.040\" \"FG.023\" \"FG.043\" \"FG.034\" \"FG.038\" #> [177] \"FG.007\" \"FG.007\" \"FG.025\" \"FG.022\" \"FG.022\" \"FG.022\" \"FG.017\" \"FG.010\" #> [185] \"FG.010\" \"FG.010\" \"FG.010\" \"FG.029\" \"FG.010\" \"FG.059\" \"FG.024\" \"FG.030\" #> [193] \"FG.010\" \"FG.019\" \"FG.020\" \"FG.020\" \"FG.026\" \"FG.022\" \"FG.010\" \"FG.020\" #> [201] \"FG.020\" \"FG.040\" \"FG.013\" \"FG.027\" \"FG.060\" \"FG.027\" \"FG.036\" \"FG.020\" #> [209] \"FG.013\" \"FG.022\" \"FG.022\" \"FG.005\" \"FG.010\" \"FG.019\" \"FG.029\" \"FG.017\" #> [217] \"FG.002\" \"FG.033\" \"FG.009\" \"FG.020\" \"FG.020\" \"FG.018\" \"FG.009\" \"FG.020\" #> [225] \"FG.020\"  ## Perform feature grouping only on a subset of rows/features: featureGroups(res) <- NA_character_ featureGroups(res)[40:80] <- \"FG\" res <- groupFeatures(res, AbundanceSimilarityParam(transform = log2)) featureGroups(res},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures-similar-rtime.html","id":null,"dir":"Reference","previous_headings":"","what":"Group features based on approximate retention times — groupFeatures-similar-rtime","title":"Group features based on approximate retention times — groupFeatures-similar-rtime","text":"Group features based similar retention time. method supposed used initial crude grouping LC-MS features based median retention time chromatographic peaks. features difference retention time <= parameter diffRt parameter object grouped together. object SummarizedExperiment(): column \"feature_group\" found SummarizedExperiment::colData() feature groups defined column sub-grouped method. See groupFeatures() general concept feature grouping. Also, might required specify column object's rowData containing retention times rtime parameter (defaults rtime = \"rtime\". Parameter groupFun allows specify function used actual grouping. Two possible choices : groupFun = groupClosest (default): method creates groups features smallest differences retention times individual group members. differences group members < diffRt (contrast grouping functions listed ). See groupSimilarityMatrix() (used actual grouping pairwise retention time differences) details. groupFun = groupConsecutive: groupConsecutive() function groups values together difference smaller diffRt. function iterates sorted retention times starting grouping lowest value. difference feature one group smaller diffRt assigned group retention time closest (similar) mean retention time group. leads smaller group sizes. aware grouping differences retention times individual features within group still larger diffRt. See groupConsecutive() details examples. groupFun = MsCoreUtils::group: function consecutively groups elements together difference retention time smaller diffRt. two features grouped one group, also features retention time within defined window two features also included feature group. grouping recursively expanded can lead, depending diffRt, large feature groups spanning large retention time window. See MsCoreUtils::group() details. grouping functions might added future. Alternatively also possible provide custom function grouping operation.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures-similar-rtime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group features based on approximate retention times — groupFeatures-similar-rtime","text":"","code":"SimilarRtimeParam(diffRt = 1, groupFun = groupClosest)  # S4 method for numeric,SimilarRtimeParam groupFeatures(object, param, ...)  # S4 method for SummarizedExperiment,SimilarRtimeParam groupFeatures(object, param, rtime = \"rtime\", ...)"},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures-similar-rtime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group features based on approximate retention times — groupFeatures-similar-rtime","text":"diffRt numeric(1) defining retention time window within features grouped. features rtime difference smaller equal diffRt grouped. groupFun function can used group values. Defaults groupFun = groupClosest. See description details alternatives. object input object provides retention times grouped. MsFeatures package defines method object either numeric SummarizedExperiment. param SimilarRtimeParam object settings method. ... additional parameters passed groupFun function. rtime object SummarizedExperiment(): character(1) specifying column rowData(object) contains retention time values.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures-similar-rtime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group features based on approximate retention times — groupFeatures-similar-rtime","text":"Depending parameter object: object numeric: returns factor defining feature groups. object SummarizedExperiment: returns input object feature group definition added column \"feature_group\" result object's rowData.","code":""},{"path":[]},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures-similar-rtime.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Group features based on approximate retention times — groupFeatures-similar-rtime","text":"Johannes Rainer","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures-similar-rtime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group features based on approximate retention times — groupFeatures-similar-rtime","text":"","code":"## Simple grouping of a numeric vector. ## ## Define a numeric vector that could represent retention times of features x <- c(2, 3, 4, 5, 10, 11, 12, 14, 15)  ## Group the values using a `group` function. This will create larger ## groups. groupFeatures(x, param = SimilarRtimeParam(2, MsCoreUtils::group)) #> [1] 1 1 1 1 2 2 2 2 2 #> Levels: 1 2  ## Group values using the default `groupClosest` function. This creates ## smaller groups in which all elements have a difference smaller than the ## defined `diffRt` with each other. groupFeatures(x, param = SimilarRtimeParam(2, groupClosest)) #> [1] 1 1 1 4 2 2 2 3 3 #> Levels: 1 2 3 4  ## Grouping on a SummarizedExperiment ## ## load the test SummarizedExperiment object library(SummarizedExperiment) data(se)  ## No feature groups defined yet featureGroups(se) #>   [1] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [26] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [51] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #>  [76] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [101] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [126] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [151] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [176] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA #> [201] NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA NA  ## Determine the column that contains retention times rowData(se) #> DataFrame with 225 rows and 11 columns #>           mzmed     mzmin     mzmax     rtmed     rtmin     rtmax    npeaks #>       <numeric> <numeric> <numeric> <numeric> <numeric> <numeric> <numeric> #> FT001     200.1     200.1     200.1   2901.63   2880.73   2922.53         2 #> FT002     205.0     205.0     205.0   2789.39   2782.30   2795.36         8 #> FT003     206.0     206.0     206.0   2788.73   2780.73   2792.86         7 #> FT004     207.1     207.1     207.1   2718.12   2713.21   2726.70         7 #> FT005     219.1     219.1     219.1   2518.82   2517.40   2520.81         3 #> ...         ...       ...       ...       ...       ...       ...       ... #> FT221    591.30     591.3     591.3   3005.03   2992.87   3006.05         5 #> FT222    592.15     592.1     592.3   3022.11   2981.91   3107.59         6 #> FT223    594.20     594.2     594.2   3418.16   3359.10   3427.90         3 #> FT224    595.25     595.2     595.3   3010.15   2992.87   3013.77         6 #> FT225    596.20     596.2     596.2   2997.91   2992.87   3002.95         2 #>              KO        WT            peakidx  ms_level #>       <numeric> <numeric>             <list> <integer> #> FT001         2         0  287, 679,1577,...         1 #> FT002         4         4     47,272,542,...         1 #> FT003         3         4     32,259,663,...         1 #> FT004         4         3     19,249,525,...         1 #> FT005         1         2  639, 788,1376,...         1 #> ...         ...       ...                ...       ... #> FT221         2         3    349,684,880,...         1 #> FT222         1         3     86,861,862,...         1 #> FT223         1         2  604, 985,1543,...         1 #> FT224         2         3     67,353,876,...         1 #> FT225         0         2  866,1447,1643,...         1  ## Column \"rtmed\" contains the (median) retention time for each feature ## Group features that are eluting within 10 seconds res <- groupFeatures(se, SimilarRtimeParam(10), rtime = \"rtmed\")  featureGroups(res) #>   [1] \"FG.021\" \"FG.001\" \"FG.001\" \"FG.057\" \"FG.062\" \"FG.019\" \"FG.062\" \"FG.075\" #>   [9] \"FG.044\" \"FG.066\" \"FG.023\" \"FG.048\" \"FG.003\" \"FG.057\" \"FG.016\" \"FG.014\" #>  [17] \"FG.048\" \"FG.066\" \"FG.030\" \"FG.004\" \"FG.015\" \"FG.011\" \"FG.069\" \"FG.033\" #>  [25] \"FG.033\" \"FG.025\" \"FG.071\" \"FG.069\" \"FG.002\" \"FG.033\" \"FG.013\" \"FG.050\" #>  [33] \"FG.023\" \"FG.038\" \"FG.003\" \"FG.043\" \"FG.012\" \"FG.012\" \"FG.013\" \"FG.004\" #>  [41] \"FG.013\" \"FG.047\" \"FG.072\" \"FG.011\" \"FG.054\" \"FG.024\" \"FG.058\" \"FG.025\" #>  [49] \"FG.032\" \"FG.012\" \"FG.003\" \"FG.001\" \"FG.005\" \"FG.005\" \"FG.006\" \"FG.004\" #>  [57] \"FG.028\" \"FG.044\" \"FG.028\" \"FG.007\" \"FG.074\" \"FG.007\" \"FG.022\" \"FG.074\" #>  [65] \"FG.007\" \"FG.025\" \"FG.025\" \"FG.045\" \"FG.052\" \"FG.072\" \"FG.048\" \"FG.020\" #>  [73] \"FG.027\" \"FG.008\" \"FG.064\" \"FG.018\" \"FG.008\" \"FG.016\" \"FG.060\" \"FG.018\" #>  [81] \"FG.076\" \"FG.047\" \"FG.018\" \"FG.011\" \"FG.053\" \"FG.037\" \"FG.013\" \"FG.002\" #>  [89] \"FG.042\" \"FG.032\" \"FG.061\" \"FG.070\" \"FG.061\" \"FG.007\" \"FG.070\" \"FG.002\" #>  [97] \"FG.008\" \"FG.046\" \"FG.065\" \"FG.008\" \"FG.022\" \"FG.022\" \"FG.033\" \"FG.061\" #> [105] \"FG.077\" \"FG.047\" \"FG.014\" \"FG.023\" \"FG.064\" \"FG.045\" \"FG.021\" \"FG.078\" #> [113] \"FG.007\" \"FG.042\" \"FG.079\" \"FG.059\" \"FG.040\" \"FG.025\" \"FG.027\" \"FG.040\" #> [121] \"FG.027\" \"FG.018\" \"FG.009\" \"FG.065\" \"FG.045\" \"FG.020\" \"FG.018\" \"FG.021\" #> [129] \"FG.024\" \"FG.052\" \"FG.015\" \"FG.037\" \"FG.038\" \"FG.052\" \"FG.043\" \"FG.036\" #> [137] \"FG.067\" \"FG.035\" \"FG.067\" \"FG.053\" \"FG.053\" \"FG.032\" \"FG.073\" \"FG.071\" #> [145] \"FG.073\" \"FG.037\" \"FG.054\" \"FG.056\" \"FG.028\" \"FG.056\" \"FG.006\" \"FG.053\" #> [153] \"FG.014\" \"FG.060\" \"FG.034\" \"FG.049\" \"FG.044\" \"FG.049\" \"FG.041\" \"FG.026\" #> [161] \"FG.059\" \"FG.036\" \"FG.008\" \"FG.006\" \"FG.008\" \"FG.019\" \"FG.035\" \"FG.016\" #> [169] \"FG.015\" \"FG.015\" \"FG.006\" \"FG.041\" \"FG.024\" \"FG.045\" \"FG.055\" \"FG.029\" #> [177] \"FG.030\" \"FG.015\" \"FG.059\" \"FG.068\" \"FG.068\" \"FG.055\" \"FG.055\" \"FG.031\" #> [185] \"FG.031\" \"FG.031\" \"FG.020\" \"FG.080\" \"FG.025\" \"FG.081\" \"FG.029\" \"FG.049\" #> [193] \"FG.029\" \"FG.082\" \"FG.040\" \"FG.010\" \"FG.010\" \"FG.068\" \"FG.046\" \"FG.040\" #> [201] \"FG.039\" \"FG.009\" \"FG.058\" \"FG.063\" \"FG.083\" \"FG.063\" \"FG.026\" \"FG.017\" #> [209] \"FG.065\" \"FG.009\" \"FG.009\" \"FG.017\" \"FG.017\" \"FG.034\" \"FG.084\" \"FG.011\" #> [217] \"FG.072\" \"FG.011\" \"FG.026\" \"FG.051\" \"FG.051\" \"FG.019\" \"FG.034\" \"FG.039\" #> [225] \"FG.050\"  ## Evaluating differences between retention times within each feature group rts <- split(rowData(res)$rtmed, featureGroups(res)) lapply(rts, function(z) abs(diff(z)) <= 10) #> $FG.001 #> [1] TRUE TRUE #>  #> $FG.002 #> [1] TRUE TRUE #>  #> $FG.003 #> [1] TRUE TRUE #>  #> $FG.004 #> [1] TRUE TRUE #>  #> $FG.005 #> [1] TRUE #>  #> $FG.006 #> [1] TRUE TRUE TRUE #>  #> $FG.007 #> [1] TRUE TRUE TRUE TRUE #>  #> $FG.008 #> [1] TRUE TRUE TRUE TRUE TRUE #>  #> $FG.009 #> [1] TRUE TRUE TRUE #>  #> $FG.010 #> [1] TRUE #>  #> $FG.011 #> [1] TRUE TRUE TRUE TRUE #>  #> $FG.012 #> [1] TRUE TRUE #>  #> $FG.013 #> [1] TRUE TRUE TRUE #>  #> $FG.014 #> [1] TRUE TRUE #>  #> $FG.015 #> [1] TRUE TRUE TRUE TRUE #>  #> $FG.016 #> [1] TRUE TRUE #>  #> $FG.017 #> [1] TRUE TRUE #>  #> $FG.018 #> [1] TRUE TRUE TRUE TRUE #>  #> $FG.019 #> [1] TRUE TRUE #>  #> $FG.020 #> [1] TRUE TRUE #>  #> $FG.021 #> [1] TRUE TRUE #>  #> $FG.022 #> [1] TRUE TRUE #>  #> $FG.023 #> [1] TRUE TRUE #>  #> $FG.024 #> [1] TRUE TRUE #>  #> $FG.025 #> [1] TRUE TRUE TRUE TRUE TRUE #>  #> $FG.026 #> [1] TRUE TRUE #>  #> $FG.027 #> [1] TRUE TRUE #>  #> $FG.028 #> [1] TRUE TRUE #>  #> $FG.029 #> [1] TRUE TRUE #>  #> $FG.030 #> [1] TRUE #>  #> $FG.031 #> [1] TRUE TRUE #>  #> $FG.032 #> [1] TRUE TRUE #>  #> $FG.033 #> [1] TRUE TRUE TRUE #>  #> $FG.034 #> [1] TRUE TRUE #>  #> $FG.035 #> [1] TRUE #>  #> $FG.036 #> [1] TRUE #>  #> $FG.037 #> [1] TRUE TRUE #>  #> $FG.038 #> [1] TRUE #>  #> $FG.039 #> [1] TRUE #>  #> $FG.040 #> [1] TRUE TRUE TRUE #>  #> $FG.041 #> [1] TRUE #>  #> $FG.042 #> [1] TRUE #>  #> $FG.043 #> [1] TRUE #>  #> $FG.044 #> [1] TRUE TRUE #>  #> $FG.045 #> [1] TRUE TRUE TRUE #>  #> $FG.046 #> [1] TRUE #>  #> $FG.047 #> [1] TRUE TRUE #>  #> $FG.048 #> [1] TRUE TRUE #>  #> $FG.049 #> [1] TRUE TRUE #>  #> $FG.050 #> [1] TRUE #>  #> $FG.051 #> [1] TRUE #>  #> $FG.052 #> [1] TRUE TRUE #>  #> $FG.053 #> [1] TRUE TRUE TRUE #>  #> $FG.054 #> [1] TRUE #>  #> $FG.055 #> [1] TRUE TRUE #>  #> $FG.056 #> [1] TRUE #>  #> $FG.057 #> [1] TRUE #>  #> $FG.058 #> [1] TRUE #>  #> $FG.059 #> [1] TRUE TRUE #>  #> $FG.060 #> [1] TRUE #>  #> $FG.061 #> [1] TRUE TRUE #>  #> $FG.062 #> [1] TRUE #>  #> $FG.063 #> [1] TRUE #>  #> $FG.064 #> [1] TRUE #>  #> $FG.065 #> [1] TRUE TRUE #>  #> $FG.066 #> [1] TRUE #>  #> $FG.067 #> [1] TRUE #>  #> $FG.068 #> [1] TRUE TRUE #>  #> $FG.069 #> [1] TRUE #>  #> $FG.070 #> [1] TRUE #>  #> $FG.071 #> [1] TRUE #>  #> $FG.072 #> [1] TRUE TRUE #>  #> $FG.073 #> [1] TRUE #>  #> $FG.074 #> [1] TRUE #>  #> $FG.075 #> logical(0) #>  #> $FG.076 #> logical(0) #>  #> $FG.077 #> logical(0) #>  #> $FG.078 #> logical(0) #>  #> $FG.079 #> logical(0) #>  #> $FG.080 #> logical(0) #>  #> $FG.081 #> logical(0) #>  #> $FG.082 #> logical(0) #>  #> $FG.083 #> logical(0) #>  #> $FG.084 #> logical(0) #>   ## One feature group (\"FG.053\") has elements with a difference larger 10: rts[[\"FG.053\"]] #> [1] 3473.784 3470.313 3472.164 3474.992 abs(diff(rts[[\"FG.053\"]])) #> [1] 3.470799 1.851390 2.828125  ## But the difference between the **sorted** retention times is < 10: abs(diff(sort(rts[[\"FG.053\"]]))) #> [1] 1.851390 1.619410 1.208715  ## Feature grouping with pre-defined feature groups: groupFeatures will ## sub-group the pre-defined feature groups, features with the feature group ## being `NA` are skipped. Below we perform the feature grouping only on ## features 40 to 70 fgs <- rep(NA, nrow(rowData(se))) fgs[40:70] <- \"FG\" featureGroups(se) <- fgs res <- groupFeatures(se, SimilarRtimeParam(10), rtime = \"rtmed\") featureGroups(res},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"General Feature Grouping Concept — groupFeatures","title":"General Feature Grouping Concept — groupFeatures","text":"documentation describes general concepts feature grouping, can achieved different approaches described . main function stepwise feature grouping groupFeatures. selection actual grouping algorithm (along definition parameters) done passing respective parameter object, along object containing input data optional additional arguments, groupFeatures method.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Feature Grouping Concept — groupFeatures","text":"","code":"groupFeatures(object, param, ...)"},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General Feature Grouping Concept — groupFeatures","text":"object input data object (data) feature grouping performed. param parameter object type defines selection grouping algorithm. ... additional arguments passed grouping algorithm.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General Feature Grouping Concept — groupFeatures","text":"Depending implementation input object. Generally input object grouping results added. See respective help pages information.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures.html","id":"single-step-feature-grouping","dir":"Reference","previous_headings":"","what":"Single-step Feature Grouping","title":"General Feature Grouping Concept — groupFeatures","text":"feature grouping algorithm can applied individually single-step approach, e.g. grouping features single feature property, retention time. Additional feature grouping approaches might also implemented consider combination different MS feature properties single clustering process.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures.html","id":"stepwise-feature-grouping-refinement","dir":"Reference","previous_headings":"","what":"Stepwise Feature Grouping Refinement","title":"General Feature Grouping Concept — groupFeatures","text":"Stepwise feature grouping evaluates single property MS features (retention time abundances) time define feature groups. subsequent grouping step builds previous one eventually sub-grouping feature group, needed. Thus, feature groups get refined step. example, grouping features based similar retention time loosely group features compounds eluting time e.g. liquid chromatography run. obviously also group features representing ions different co-eluting compounds. Thus, calling groupFeatures previous feature grouping result different parameter object refine initial feature groups, splitting based another property features (correlation feature abundances across samples). advantage stepwise approach results can evaluated grouping step parameters adapted needed. Also, provides flexibility allowing change order grouping approaches, skip individual steps suitable available data experimental setup. major disadvantage wrong group assignment one initial steps can corrected later steps.","code":""},{"path":[]},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"General Feature Grouping Concept — groupFeatures","text":"Johannes Rainer","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupFeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General Feature Grouping Concept — groupFeatures","text":"","code":"## For examples please refer to the help pages of the `SimilarRtimeParam` or ## `AbundanceSimilarityParam` objects. NULL #> NULL"},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupSimilarityMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Group rows of a diagonal matrix using a threshold — groupSimilarityMatrix","title":"Group rows of a diagonal matrix using a threshold — groupSimilarityMatrix","text":"function groups elements (rows columns) diagonal matrix, pairwise correlation matrix similarity matrix, value >= threshold. creates clusters elements elements value >= threshold element cluster. correlation matrix (created cor) generate small clusters highly correlated elements. Note however single elements one cluster also correlation >= threshold another element another cluster. average similarity cluster however higher .","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupSimilarityMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group rows of a diagonal matrix using a threshold — groupSimilarityMatrix","text":"","code":"groupSimilarityMatrix(x, threshold = 0.9, full = TRUE, ...)"},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupSimilarityMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group rows of a diagonal matrix using a threshold — groupSimilarityMatrix","text":"x symmetrix numeric matrix. threshold numeric(1) rows x grouped. full logical(1) whether full matrix considered, just upper triangular matrix (including diagonal). ... ignored.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupSimilarityMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group rows of a diagonal matrix using a threshold — groupSimilarityMatrix","text":"integer length nrow(x), grouped elements (rows) defined value.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupSimilarityMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Group rows of a diagonal matrix using a threshold — groupSimilarityMatrix","text":"algorithm defined follows: pairs values x >= threshold identified sorted decreasingly. starting pair highest correlation, groups defined: none two group, put new group. one two already group, put group correlations group >= threshold (NA). already group nothing done. different groups: element put group ) correlations members 's group NA >= threshold b) average correlation group larger average correlation group. ensures groups defined elements correlation >= threshold correlation members group maximized.","code":""},{"path":[]},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupSimilarityMatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Group rows of a diagonal matrix using a threshold — groupSimilarityMatrix","text":"Johannes Rainer","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/groupSimilarityMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group rows of a diagonal matrix using a threshold — groupSimilarityMatrix","text":"","code":"x <- rbind(     c(1, 0.9, 0.6, 0.8, 0.5),     c(0.9, 1, 0.7, 0.92, 0.8),     c(0.6, 0.7, 1, 0.91, 0.7),     c(0.8, 0.92, 0.91, 1, 0.9),     c(0.5, 0.8, 0.7, 0.9, 1)     )  groupSimilarityMatrix(x, threshold = 0.9) #> [1] 2 1 3 1 4  groupSimilarityMatrix(x, threshold = 0.1) #> [1] 1 1 1 1 1  ## Add also a correlation between 3 and 2 x[2, 3] <- 0.9 x[3, 2] <- 0.9 x #>      [,1] [,2] [,3] [,4] [,5] #> [1,]  1.0 0.90 0.60 0.80  0.5 #> [2,]  0.9 1.00 0.90 0.92  0.8 #> [3,]  0.6 0.90 1.00 0.91  0.7 #> [4,]  0.8 0.92 0.91 1.00  0.9 #> [5,]  0.5 0.80 0.70 0.90  1.0 groupSimilarityMatrix(x, threshold = 0.9) #> [1] 2 1 1 1 3  ## Add a higher correlation between 4 and 5 x[4, 5] <- 0.99 x[5, 4] <- 0.99 x #>      [,1] [,2] [,3] [,4] [,5] #> [1,]  1.0 0.90 0.60 0.80 0.50 #> [2,]  0.9 1.00 0.90 0.92 0.80 #> [3,]  0.6 0.90 1.00 0.91 0.70 #> [4,]  0.8 0.92 0.91 1.00 0.99 #> [5,]  0.5 0.80 0.70 0.99 1.00 groupSimilarityMatrix(x, threshold = 0.9) #> [1] 2 2 3 1 1  ## Increase correlation between 2 and 3 x[2, 3] <- 0.92 x[3, 2] <- 0.92 x #>      [,1] [,2] [,3] [,4] [,5] #> [1,]  1.0 0.90 0.60 0.80 0.50 #> [2,]  0.9 1.00 0.92 0.92 0.80 #> [3,]  0.6 0.92 1.00 0.91 0.70 #> [4,]  0.8 0.92 0.91 1.00 0.99 #> [5,]  0.5 0.80 0.70 0.99 1.00 groupSimilarityMatrix(x, threshold = 0.9) ## Don't break previous cluster! #> [1] 3 2 2 1 1"},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/hidden_aliases.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal page for hidden aliases — hidden_aliases","title":"Internal page for hidden aliases — hidden_aliases","text":"Internal page hidden aliases","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/hidden_aliases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal page for hidden aliases — hidden_aliases","text":"applicable","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/hidden_aliases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal page for hidden aliases — hidden_aliases","text":"","code":"NULL #> NULL"},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/se.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantified LC-MS preprocessing result test data — se","title":"Quantified LC-MS preprocessing result test data — se","text":"se variable SummarizedExperiment() object representing results xcms-based pre-processing LC-MS untargeted metabolomics data set. raw data files provided faahKO package. pre-processing data set described detail xcms vignette xcms package. object created XCMSnExp result object quantify method.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/reference/se.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantified LC-MS preprocessing result test data — se","text":"","code":"## Load the data data(se)  library(SummarizedExperiment)  ## Access row (feature) data rowData(se) #> DataFrame with 225 rows and 11 columns #>           mzmed     mzmin     mzmax     rtmed     rtmin     rtmax    npeaks #>       <numeric> <numeric> <numeric> <numeric> <numeric> <numeric> <numeric> #> FT001     200.1     200.1     200.1   2901.63   2880.73   2922.53         2 #> FT002     205.0     205.0     205.0   2789.39   2782.30   2795.36         8 #> FT003     206.0     206.0     206.0   2788.73   2780.73   2792.86         7 #> FT004     207.1     207.1     207.1   2718.12   2713.21   2726.70         7 #> FT005     219.1     219.1     219.1   2518.82   2517.40   2520.81         3 #> ...         ...       ...       ...       ...       ...       ...       ... #> FT221    591.30     591.3     591.3   3005.03   2992.87   3006.05         5 #> FT222    592.15     592.1     592.3   3022.11   2981.91   3107.59         6 #> FT223    594.20     594.2     594.2   3418.16   3359.10   3427.90         3 #> FT224    595.25     595.2     595.3   3010.15   2992.87   3013.77         6 #> FT225    596.20     596.2     596.2   2997.91   2992.87   3002.95         2 #>              KO        WT            peakidx  ms_level #>       <numeric> <numeric>             <list> <integer> #> FT001         2         0  287, 679,1577,...         1 #> FT002         4         4     47,272,542,...         1 #> FT003         3         4     32,259,663,...         1 #> FT004         4         3     19,249,525,...         1 #> FT005         1         2  639, 788,1376,...         1 #> ...         ...       ...                ...       ... #> FT221         2         3    349,684,880,...         1 #> FT222         1         3     86,861,862,...         1 #> FT223         1         2  604, 985,1543,...         1 #> FT224         2         3     67,353,876,...         1 #> FT225         0         2  866,1447,1643,...         1"},{"path":[]},{"path":"https://rformassspectrometry.github.io/MsFeatures/news/index.html","id":"msfeatures-0-0","dir":"Changelog","previous_headings":"","what":"MsFeatures 0.0.4","title":"MsFeatures 0.0","text":"Add AbundanceSimilarityParam functionality group features based similarity abundances across samples.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/news/index.html","id":"msfeatures-0-0-1","dir":"Changelog","previous_headings":"","what":"MsFeatures 0.0.3","title":"MsFeatures 0.0","text":"Add functionality group features based similar retention times. Rename old groupClosest function groupConsecutive. Add new groupClosest function uses groupSimilarityMatrix.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/news/index.html","id":"msfeatures-0-0-2","dir":"Changelog","previous_headings":"","what":"MsFeatures 0.0.2","title":"MsFeatures 0.0","text":"Add groupDiagonalMatrix function, remove groupByCorrelation.","code":""},{"path":"https://rformassspectrometry.github.io/MsFeatures/news/index.html","id":"msfeatures-0-0-3","dir":"Changelog","previous_headings":"","what":"MsFeatures 0.0.1","title":"MsFeatures 0.0","text":"Add groupClosest groupByCorrelation functions.","code":""}]
